on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

env:
  PYTHON_VERSION: '3.10'
  ALLURE_VERSION: '2.35.1'

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path 'requirements.txt') {
            python -m pip install -r requirements.txt
          }
          python -m pip install allure-pytest pytest-html

      - name: Create result directories
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path allure-results,report,site -Force | Out-Null

      - name: Run Pytest with Allure & HTML reports
        shell: pwsh
        run: |
          python -m pytest tests/ `
            --alluredir=allure-results `
            --html=report/pytest-report.html `
            --self-contained-html `
            --maxfail=0 `
            --disable-warnings `
            --tb=short `
            -v

      - name: Install Allure CLI
        shell: pwsh
        run: |
          $version = "${{ env.ALLURE_VERSION }}"
          # ✅ FIXED: No extra spaces in URL
          $url = "https://github.com/allure-framework/allure2/releases/download/$version/allure-$version.zip"
          $zip = "$env:TEMP\allure-$version.zip"
          Write-Host "Downloading Allure from: $url"
          Invoke-WebRequest -Uri $url -OutFile $zip -UseBasicParsing
          Expand-Archive -Path $zip -DestinationPath allure -Force
          $allureHome = (Get-ChildItem -Path allure -Directory)[0].FullName
          Write-Host "Allure installed at: $allureHome"
          Add-Content -Path $env:GITHUB_ENV -Value "ALLURE_HOME=$allureHome"
          Add-Content -Path $env:GITHUB_ENV -Value "PATH=$allureHome\bin;$env:PATH"

      - name: Generate Allure HTML report
        shell: pwsh
        run: |
          $resultCount = (Get-ChildItem -Path allure-results -Recurse -ErrorAction SilentlyContinue | Measure-Object).Count
          if ($resultCount -eq 0) {
            Write-Error "❌ No Allure results found in allure-results/ — check if tests ran or produced .json/.xml files"
            exit 1
          }
          Write-Host "✅ Found $resultCount Allure result files. Generating report..."
          allure generate allure-results -o allure-report --clean
          Write-Host "✅ Allure report generated successfully."

      - name: Prepare site for GitHub Pages
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path site/allure-report,site/pytest-report -Force | Out-Null
          Copy-Item -Recurse -Force allure-report/* site/allure-report/
          Copy-Item report/pytest-report.html site/pytest-report/index.html

      - name: Upload Allure report as artifact (for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site
          publish_branch: gh-pages